name: Stage 2 - Tagging and Releasing

on:
  pull_request:
    types: [ closed ]
    branches:
      - master

jobs:
  release:
    if: github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set Git Config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Read Package Version
        id: package_version
        run: echo "::set-output name=version::$(jq -r '.version' package.json)"

      - name: Get Newly Added Changes
        id: new_changes
        run: |
          new_changes=$(git diff --diff-filter=A origin/master -- CHANGELOG.md)
          echo "::set-output name=new_changes::$new_changes"

      - name: Display Newly Added Changes
        run: |
          echo "Newly Added Changes: ${{ steps.new_changes.outputs.new_changes }}"

      - name: Get PR Description
        id: pr_description
        run: |
          pr_number="${{ github.event.pull_request.number }}"
          description=$(curl -sH "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number" | \
            jq -r '.body')
          echo "::set-output name=description::$description"
      
      - name: Create Tag and Push
        run: |
          version="${{ steps.package_version.outputs.version }}"
          tag_name="v${version}"
          git tag -a "$tag_name" -m "Version $version" && git push origin "$tag_name"

      - name: Create Release
        run: |
          version="${{ steps.package_version.outputs.version }}"
          tag_name="v${version}"
          description="${{ steps.pr_description.outputs.description }}"
          gh release create "$tag_name" -t "$tag_name" -n "$description"
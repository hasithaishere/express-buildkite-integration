AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Notify lambda function template..

  SAM Template for notify..
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Layers:
      - !Ref AppLayer
      - !Ref MySQLLayer

Metadata:
  Name: "MS-Notify-Lambda"
  StagingStackName: "staging--ms-notify-lambda"
  ProductionStackName: "production--ms-notify-lambda"
    
Parameters:
  Environment:
    Type: String
    Default: local
    AllowedValues:
      - "local"
      - "staging"
      - "production"
  ResultBucketName:
    Type: String
    Default: "results-bucket"
  SecondaryBucketName:
    Type: String
  DBPassword:
    Type: String
    MinLength: 10
    MaxLength: 30
    NoEcho: true
  ESPassword:
    Type: String
    MinLength: 10
    MaxLength: 30
    NoEcho: true
  APIMethod:
    Type: String

Resources:
  AppLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${Environment}--test-appLayer"
      Description: Layer to store shared code and env variables
      ContentUri: layers/app
      CompatibleRuntimes:
        - nodejs16.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
  MySQLLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${Environment}--test-mysqlLayer"
      Description: Layer for mysql
      ContentUri: layers/mysql
      CompatibleRuntimes:
        - nodejs16.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      #Environment:
      #  Variables:
          # NODE_OPTIONS: -r elastic-apm-node/start
          # ELASTIC_APM_LAMBDA_APM_SERVER: https://XXXXXX.apm.us-central1.gcp.cloud.es.io:443
          # ELASTIC_APM_SECRET_TOKEN: XXXXX
          # ELASTIC_APM_SEND_STRATEGY: background
      Layers:
        - arn:aws:lambda:us-east-1:267093732750:layer:elastic-apm-extension-ver-1-3-1-x86_64:1
        - arn:aws:lambda:us-east-1:267093732750:layer:elastic-apm-node-ver-3-44-1:1
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/hello-api-v9-trailer"
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
  APIMethodType:
    Description: "API method type"
    Value: !Ref APIMethod
